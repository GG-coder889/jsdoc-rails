<% if members.size > 0 %>
  <table class="members">
    <thead>
      <tr>
        <th><%= member_type.capitalize %></th>
        <th class="defined_by">Defined By</th>
      </tr>
    </thead>
    <tbody>
      <% for m in members.sort{|x,y| x.name <=> y.name} %>
        <tr id="<%= anchorName(m) %>" class="<%= m.symbol == @symbol ? 'own' : 'borrowed' %> <%= member_type.underscore %>">
          <td>
            <% if m.is_static %><span class="flag">&lt;static&gt;</span><% end %>
            <% if m.respond_to?('is_constant') and m.is_constant %><span class="flag">&lt;constant&gt;</span><% end %>
            <% if m.respond_to?('is_readable') and m.is_readable and !m.is_writable %><span class="flag">&lt;read-only&gt;</span><% end %>
            <% if m.respond_to?('is_readable') and m.is_writable and !m.is_readable %><span class="flag">&lt;write-only&gt;</span><% end %>
            <% if m.is_a?(Jsdoc::Property) %>
              <%= link_to(m.name, '#' + anchorName(m), :class => 'member_link') %> : <%= m.property_type.blank? ? '*' : link_to_symbol(m.property_type) %>
            <% elsif m.is_a?(Jsdoc::Function) %>
              <%= link_to(m.name, '#' + anchorName(m), :class => 'member_link') %> <%= render :partial => 'param_list', :locals => {:params => m.params} %> : <span class="return_type"><%= m.returns.blank? ? 'void' : link_to_symbol(m.returns.first.return_type) %></span>
            <% else %>
              <%= m.name %>
            <% end %>

            <% if m.description.present? %>
              <div class="description">
                <%= raw(m.description) %>
              </div>
            <% end %>
          </td>
          <td><%= m.symbol == @symbol ? @symbol.name : link_to(m.symbol.name, jsdoc_symbol_path(m.symbol.alias) + "##{member_type.underscore}_#{m.name}") %></td>
        </tr>
      <% end %>
    </tbody>
  </table>
<% else %>
  This <%= @symbol.symbol_type.downcase %> has no <%= member_type.downcase.pluralize %>.
<% end %>
